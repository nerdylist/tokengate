import { csl } from '@mesh/core';
import type { PlutusData, ScriptRef, TransactionUnspentOutput, Value } from '@mesh/core';
import type { Action, Asset, Data, NativeScript, PlutusScript, PoolParams, Relay, UTxO } from '@mesh/common/types';
export declare const toAddress: (bech32: string) => csl.Address;
export declare const toBaseAddress: (bech32: string) => csl.BaseAddress | undefined;
export declare const toEnterpriseAddress: (bech32: string) => csl.EnterpriseAddress | undefined;
export declare const toRewardAddress: (bech32: string) => csl.RewardAddress | undefined;
export declare const fromBytes: (bytes: Uint8Array) => string;
export declare const toBytes: (hex: string) => Uint8Array;
export declare const fromLovelace: (lovelace: number) => number;
export declare const toLovelace: (ada: number) => number;
export declare const fromNativeScript: (script: csl.NativeScript) => NativeScript;
export declare const toNativeScript: (script: NativeScript) => csl.NativeScript;
export declare const fromPlutusData: (plutusData: PlutusData) => Data;
export declare const toPlutusData: (data: Data) => csl.PlutusData;
export declare const toPoolParams: (params: PoolParams) => never;
export declare const toRedeemer: (action: Action) => csl.Redeemer;
export declare const toRelay: (relay: Relay) => csl.Relay;
export declare const fromScriptRef: (scriptRef: ScriptRef) => NativeScript | PlutusScript;
export declare const toScriptRef: (script: PlutusScript | NativeScript) => csl.ScriptRef;
export declare const fromTxUnspentOutput: (txUnspentOutput: TransactionUnspentOutput) => UTxO;
export declare const toTxUnspentOutput: (utxo: UTxO) => csl.TransactionUnspentOutput;
export declare const toUnitInterval: (float: string) => csl.UnitInterval;
export declare const fromUTF8: (utf8: string) => string;
export declare const toUTF8: (hex: string) => string;
export declare const fromValue: (value: Value) => Asset[];
export declare const toValue: (assets: Asset[]) => csl.Value;
