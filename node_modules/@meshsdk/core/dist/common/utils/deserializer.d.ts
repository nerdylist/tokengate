import { csl } from '@mesh/core';
import type { LanguageVersion } from '@mesh/common/types';
export declare const deserializeAddress: (address: string) => csl.Address;
export declare const deserializeBip32PrivateKey: (bip32PrivateKey: string) => csl.Bip32PrivateKey;
export declare const deserializeDataHash: (dataHash: string) => csl.DataHash;
export declare const deserializeEd25519KeyHash: (ed25519KeyHash: string) => csl.Ed25519KeyHash;
export declare const deserializeEd25519Signature: (ed25519Signature: string) => csl.Ed25519Signature;
export declare const deserializeNativeScript: (nativeScript: string) => csl.NativeScript;
export declare const deserializePublicKey: (publicKey: string) => csl.PublicKey;
export declare const deserializePlutusData: (plutusData: string) => csl.PlutusData;
export declare const deserializePlutusScript: (plutusScript: string, version: LanguageVersion) => csl.PlutusScript;
export declare const deserializeScriptRef: (scriptRef: string) => csl.ScriptRef;
export declare const deserializeScriptHash: (scriptHash: string) => csl.ScriptHash;
export declare const deserializeTx: (tx: string) => csl.Transaction;
export declare const deserializeTxBody: (txBody: string) => csl.TransactionBody;
export declare const deserializeTxHash: (txHash: string) => csl.TransactionHash;
export declare const deserializeTxUnspentOutput: (txUnspentOutput: string) => csl.TransactionUnspentOutput;
export declare const deserializeTxWitnessSet: (txWitnessSet: string) => csl.TransactionWitnessSet;
export declare const deserializeValue: (value: string) => csl.Value;
