import type { Data, Era, LanguageVersion, NativeScript, Network, PlutusScript } from '@mesh/common/types';
export declare const resolveDataHash: (data: Data) => string;
export declare const resolveEpochNo: (network: Network, milliseconds?: number) => number;
export declare const resolveFingerprint: (policyId: string, assetName: string) => string;
export declare const resolveLanguageView: (era: Era, version: LanguageVersion) => string | undefined;
export declare const resolveNativeScriptHash: (script: NativeScript) => string;
export declare const resolvePaymentKeyHash: (bech32: string) => string;
export declare const resolvePlutusScriptAddress: (script: PlutusScript, networkId?: number) => string;
export declare const resolvePlutusScriptHash: (bech32: string) => string;
export declare const resolvePoolId: (hash: string) => string;
export declare const resolvePrivateKey: (words: string[]) => string;
export declare const resolveScriptRef: (script: PlutusScript | NativeScript) => string;
export declare const resolveSlotNo: (network: Network, milliseconds?: number) => string;
export declare const resolveRewardAddress: (bech32: string) => string;
export declare const resolveStakeKeyHash: (bech32: string) => string;
export declare const resolveTxFees: (txSize: number, minFeeA?: number, minFeeB?: number) => string;
export declare const resolveTxHash: (txHex: string) => string;
